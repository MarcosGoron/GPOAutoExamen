@model GpoAutofin.Data.Models.Productos

@{
    ViewBag.Title = "EditarProducto";
}

<h2>Editar Producto</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Productos</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IdProducto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdProducto, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.IdProducto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @id = "txtNombre", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @id = "txtMarca", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Costo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Costo, new { htmlAttributes = new { @id = "txtCosto", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Costo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrecioVenta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrecioVenta, new { htmlAttributes = new { @id = "txtPrecioVenta", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrecioVenta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnGuardar" type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        $("#btnGuardar").click(function () {
            var nombre = $("#txtNombre").val();
            var marca = $("#txtMarca").val();
            var costo = $("#txtCosto").val();
            var precioVenta = $("#txtPrecioVenta").val();
            var url = '@Url.Action("EditarProducto", "Productos")'

            $.post(url, { nombre: nombre, marca: marca, costo: costo, precioVenta: precioVenta},
                function (guarda) {
                    location.reload(true);
                });
        });
    </script>
}